[{"/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/index.tsx":"1","/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/reportWebVitals.ts":"2","/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/App/App.tsx":"3","/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/SubHeader/SubHeader.tsx":"4","/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/Expertice/Expertice.tsx":"5","/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/LandingPage/LandingPage.tsx":"6","/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/Play/Play.tsx":"7"},{"size":516,"mtime":1622806942642,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1622806942643,"results":"10","hashOfConfig":"9"},{"size":505,"mtime":1625422886216,"results":"11","hashOfConfig":"9"},{"size":1016,"mtime":1625687879507,"results":"12","hashOfConfig":"9"},{"size":2266,"mtime":1625688840293,"results":"13","hashOfConfig":"9"},{"size":6159,"mtime":1625690609746,"results":"14","hashOfConfig":"9"},{"size":2344,"mtime":1625687879506,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"uvmmhg",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/index.tsx",[],["34","35"],"/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/reportWebVitals.ts",[],"/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/App/App.tsx",[],"/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/SubHeader/SubHeader.tsx",[],"/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/Expertice/Expertice.tsx",["36"],"import {\n  Build,\n  Idea,\n  UserExperienceDesign,\n  WebDeveloper,\n} from \"@carbon/pictograms-react\";\nimport { Button, Tile } from \"carbon-components-react\";\nimport \"./Expertice.scss\";\n\ntype Props = {};\n\nexport const Expertice = ({}: Props) => {\n  return (\n    <div className=\"Expertice\">\n      <p>\n        Ved bruk av moderne nett-teknologi, kan vi hjelpe til med å løfte ditt\n        produkt opp til neste nivå.\n      </p>\n      <div className=\"tileGroup\">\n        <Tile>\n          <UserExperienceDesign />\n          <div>\n            <h3>Tilgjengelighet</h3>\n            <p>\n              Hos Ryfylke React er vi veldig opptatt av at nettsted ikke bare\n              skal se og føles bra ut, men også være tilgjengelige for hvem som\n              helst, hvor som helst. Vi holder oss derfor kurset og oppdatert på\n              nyheter og best-practises rundt accessibility og responsivt\n              design.\n            </p>\n          </div>\n        </Tile>\n        <Tile>\n          <Build />\n          <div>\n            <h3>Design</h3>\n            <p>\n              Vi er design-orienterte, og jobber helst innen et rammeverk.\n              Nettsted skal både se bra ut, og føles bra å bruke. Vi har god\n              kompetanse innen nett-animering, og avansert CSS.\n            </p>\n          </div>\n        </Tile>\n        <Tile>\n          <Idea />\n          <div>\n            <h3>Kompetanse</h3>\n            <p>\n              Vi har utviklere som har jobbet på prosjekt hos små og store\n              firma. Solo-utvikling og design av prosjekt, eller på team av\n              internasjonale utviklere med SCRUM metodikk - vi trives på begge\n              fronter.\n            </p>\n          </div>\n        </Tile>\n        <Tile>\n          <WebDeveloper />\n          <div>\n            <h3>Erfaring</h3>\n            <p>\n              Selv om vi er nye på markede, så har vi utvikler med mange år\n              erfaring med profesjonelt arbeid og tidligere kunder som Equinor,\n              Telenor og LIGL AS.\n            </p>\n            <Button kind=\"ghost\" href=\"https://haakon.dev\" target=\"_blank\">\n              Portfolio\n            </Button>\n          </div>\n        </Tile>\n      </div>\n    </div>\n  );\n};\n\nexport default Expertice;\n","/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/LandingPage/LandingPage.tsx",["37"],"import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  InlineLoading,\n  Loading,\n  Modal,\n  OverflowMenuItem,\n  TextArea,\n  TextInput,\n} from \"carbon-components-react\";\nimport { Email32, UserRole32 } from \"@carbon/icons-react\";\nimport { SubHeader } from \"../SubHeader/SubHeader\";\nimport { Expertice } from \"../Expertice/Expertice\";\nimport { Tooltip } from \"carbon-components-react/lib/components/Tooltip/Tooltip\";\nimport axios from \"axios\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { OverflowMenu } from \"carbon-components-react/lib/components/OverflowMenu/OverflowMenu\";\nimport \"./LandingPage.scss\";\n\nexport function LandingPage() {\n  const [contactFailed, setContactFailed] = useState(false);\n  const [formLoading, setFormLoading] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [formErrors, setFormErrors] = useState({\n    reply_to: false,\n    message: false,\n    name: false,\n  });\n  const [formState, setFormState] = useState({\n    name: \"\",\n    reply_to: \"\",\n    message: \"\",\n  });\n  const createFormProps = (key: keyof typeof formState) => ({\n    value: formState[key],\n    onChange: (e: any) =>\n      setFormState({ ...formState, [key]: e?.target?.value }),\n    id: key,\n    invalid: formErrors[key],\n  });\n\n  return (\n    <div className=\"LandingPage\">\n      <ToastContainer position=\"top-center\" />\n      <header>\n        <h1>\n          Ryfylke React AS <p>Frontend konsulent-firma</p>\n        </h1>\n        <nav>\n          <OverflowMenu className=\"of-menu\" flipped>\n            <OverflowMenuItem\n              itemText=\"Kontakt oss\"\n              onClick={() => setModalOpen(true)}\n            />\n          </OverflowMenu>\n          <Tooltip\n            showIcon={false}\n            align=\"end\"\n            triggerText={\n              <Button id=\"konsulenter\" kind=\"secondary\" renderIcon={UserRole32}>\n                Konsulenter\n              </Button>\n            }\n          >\n            <ul>\n              <li>\n                <Button\n                  size=\"field\"\n                  kind=\"secondary\"\n                  href=\"https://haakon.dev\"\n                  target=\"_blank\"\n                >\n                  Håkon S. Underbakke\n                </Button>\n              </li>\n            </ul>\n          </Tooltip>\n\n          <Button renderIcon={Email32} onClick={() => setModalOpen(true)}>\n            Kontakt oss\n          </Button>\n          <Modal\n            open={modalOpen}\n            size=\"sm\"\n            onRequestClose={() => setModalOpen(false)}\n            onRequestSubmit={() => {\n              setFormErrors({ name: false, reply_to: false, message: false });\n              if (contactFailed) {\n                document.location.href = `mailto:hakon@ryfylke.dev?body=${formState.message}`;\n                return;\n              }\n              let newFormErrors: {\n                [key: string]: boolean;\n              } = { reply_to: false, message: false };\n              if (!formState.reply_to) {\n                newFormErrors.reply_to = true;\n              }\n              if (!formState.message) {\n                newFormErrors.message = true;\n              }\n              if (\n                Object.keys(newFormErrors).every(\n                  (key) => (newFormErrors[key] as boolean) === false\n                )\n              ) {\n                setFormLoading(true);\n                axios\n                  .post(\n                    \"https://ewxpkphj05.execute-api.us-east-1.amazonaws.com/dev/static-site-mailer\",\n                    formState\n                  )\n                  .then(() => {\n                    setModalOpen(false);\n                    toast(\"Meldingen ble levert!\", { type: \"success\" });\n                  })\n                  .catch((err) => {\n                    toast(\"Klarte ikke å sende melding...\", {\n                      type: \"error\",\n                      autoClose: 2000,\n                    });\n                    toast(\n                      \"Trykk igjen for å sende mail fra din e-post klient\",\n                      {\n                        type: \"info\",\n                        autoClose: 7000,\n                      }\n                    );\n                    setContactFailed(true);\n                    const submitButton: HTMLButtonElement | null =\n                      document.querySelector(\n                        \".bx--modal-footer button.bx--btn--primary\"\n                      );\n                    if (submitButton) {\n                      submitButton.focus();\n                    }\n                    console.error(err);\n                  })\n                  .finally(() => {\n                    setFormLoading(false);\n                  });\n              } else {\n                setFormErrors(newFormErrors as typeof formErrors);\n              }\n            }}\n            modalHeading=\"Kontakt oss\"\n            primaryButtonText={contactFailed ? \"Send e-post\" : \"Send melding\"}\n            secondaryButtonText=\"Avbryt\"\n            hasForm\n          >\n            <Form>\n              <TextInput {...createFormProps(\"name\")} labelText=\"Ditt navn\" />\n              <TextInput\n                {...createFormProps(\"reply_to\")}\n                type=\"email\"\n                labelText=\"E-post addresse\"\n                invalidText=\"Obligatorisk felt\"\n              />\n              <TextArea\n                {...createFormProps(\"message\")}\n                labelText=\"Melding\"\n                invalidText=\"Obligatorisk felt\"\n              />\n              {formLoading && <Loading active />}\n            </Form>\n          </Modal>\n        </nav>\n      </header>\n      <main>\n        <SubHeader />\n        <Expertice />\n      </main>\n      <footer>\n        <p>La oss ta en prat om hva vi kan gjøre for deg og din bedrift.</p>\n        <div className=\"flex\">\n          <Button kind=\"primary\" onClick={() => setModalOpen(true)}>\n            Send oss en melding\n          </Button>\n          <p>\n            (<a href=\"tel:98494271\">+47 984 94 271</a>)\n          </p>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/Play/Play.tsx",["38"],"import { TextInput, CopyButton, AspectRatio } from \"carbon-components-react\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useRef } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\ntype Props = {};\n\ntype Opts = {\n  autoplay?: string;\n  width?: string;\n  height?: string;\n  controls?: string;\n  loop?: string;\n  title?: string;\n};\n\nexport const PlayPage = ({}: Props) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const history = useHistory();\n  const filepath = history.location.pathname.split(\"/\").slice(2).join(\"/\");\n  const opts: Opts = Object.fromEntries(\n    new URLSearchParams(history.location.search).entries()\n  );\n\n  useEffect(() => {\n    if (opts.title) {\n      document.title = opts.title + \" - Ryfylke React AS\";\n    }\n  }, [opts]);\n\n  return (\n    <Container>\n      <div>\n        {opts.title && <h1>{opts.title}</h1>}\n        <AspectRatio ratio=\"16x9\">\n          <video\n            src={filepath}\n            width={opts.width ?? \"100%\"}\n            height={opts.height ?? \"100%\"}\n            autoPlay={opts.autoplay === \"false\" ? false : true}\n            controls={opts.controls === \"false\" ? false : true}\n            loop={opts.loop === \"true\" ? true : false}\n          ></video>\n        </AspectRatio>\n        <CopyInput>\n          <TextInput\n            value={window.location.href}\n            labelText=\" \"\n            id=\"share\"\n            ref={inputRef}\n          ></TextInput>\n          <CopyButton\n            feedback=\"Kopiert!\"\n            onClick={() => {\n              if (inputRef?.current) {\n                inputRef.current.select();\n                document.execCommand(\"copy\");\n              }\n            }}\n          />\n        </CopyInput>\n      </div>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  display: grid;\n  height: 100vh;\n  place-items: center;\n  video {\n    border: none;\n  }\n  input {\n    background: #222;\n    color: #ccc;\n  }\n  .bx--copy-btn {\n    background: none;\n    margin-top: -8px;\n    &:hover  {\n      box-shadow: 1px 1px 6px -3px #000;\n    }\n    svg {\n      fill: #ccc;\n    }\n  }\n  h1 {\n    color: #ccc;\n    font-size: 1rem;\n    font-weight: bold;\n    margin-bottom: 1rem;\n  }\n`;\n\nconst CopyInput = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport default PlayPage;\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":12,"column":27,"nodeType":"45","messageId":"46","endLine":12,"endColumn":36},{"ruleId":"47","severity":1,"message":"48","line":5,"column":3,"nodeType":"49","messageId":"50","endLine":5,"endColumn":16},{"ruleId":"43","severity":1,"message":"44","line":19,"column":26,"nodeType":"45","messageId":"46","endLine":19,"endColumn":35},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","@typescript-eslint/no-unused-vars","'InlineLoading' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]