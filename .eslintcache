[{"/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/index.tsx":"1","/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/reportWebVitals.ts":"2","/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/App/App.tsx":"3","/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/SubHeader/SubHeader.tsx":"4","/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/Expertice/Expertice.tsx":"5"},{"size":516,"mtime":1622806942642,"results":"6","hashOfConfig":"7"},{"size":425,"mtime":1622806942643,"results":"8","hashOfConfig":"7"},{"size":5783,"mtime":1622840283489,"results":"9","hashOfConfig":"7"},{"size":1016,"mtime":1622840029107,"results":"10","hashOfConfig":"7"},{"size":2290,"mtime":1622839645468,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"uvmmhg",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/index.tsx",[],["26","27"],"/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/reportWebVitals.ts",[],"/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/App/App.tsx",["28"],"import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  InlineLoading,\n  Loading,\n  Modal,\n  OverflowMenuItem,\n  TextArea,\n  TextInput,\n} from \"carbon-components-react\";\nimport { Email32, UserRole32 } from \"@carbon/icons-react\";\nimport { SubHeader } from \"../SubHeader/SubHeader\";\nimport { Expertice } from \"../Expertice/Expertice\";\nimport \"./App.scss\";\nimport { Tooltip } from \"carbon-components-react/lib/components/Tooltip/Tooltip\";\nimport axios from \"axios\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { OverflowMenu } from \"carbon-components-react/lib/components/OverflowMenu/OverflowMenu\";\n\nfunction App() {\n  const [contactFailed, setContactFailed] = useState(false);\n  const [formLoading, setFormLoading] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [formErrors, setFormErrors] = useState({\n    reply_to: false,\n    message: false,\n    name: false,\n  });\n  const [formState, setFormState] = useState({\n    name: \"\",\n    reply_to: \"\",\n    message: \"\",\n  });\n  const createFormProps = (key: keyof typeof formState) => ({\n    value: formState[key],\n    onChange: (e: any) =>\n      setFormState({ ...formState, [key]: e?.target?.value }),\n    id: key,\n    invalid: formErrors[key],\n  });\n\n  return (\n    <div className=\"App\">\n      <ToastContainer position=\"top-center\" />\n      <header>\n        <h1>\n          Ryfylke React AS <p>Frontend konsulent-firma</p>\n        </h1>\n        <nav>\n          <OverflowMenu className=\"of-menu\" flipped>\n            <OverflowMenuItem\n              itemText=\"Kontakt oss\"\n              onClick={() => setModalOpen(true)}\n            />\n          </OverflowMenu>\n          <Tooltip\n            showIcon={false}\n            align=\"end\"\n            triggerText={\n              <Button id=\"konsulenter\" kind=\"secondary\" renderIcon={UserRole32}>\n                Konsulenter\n              </Button>\n            }\n          >\n            <ul>\n              <li>\n                <Button\n                  size=\"field\"\n                  kind=\"secondary\"\n                  href=\"https://haakon.dev\"\n                  target=\"_blank\"\n                >\n                  Håkon S. Underbakke\n                </Button>\n              </li>\n            </ul>\n          </Tooltip>\n\n          <Button renderIcon={Email32} onClick={() => setModalOpen(true)}>\n            Kontakt oss\n          </Button>\n          <Modal\n            open={modalOpen}\n            size=\"sm\"\n            onRequestClose={() => setModalOpen(false)}\n            onRequestSubmit={() => {\n              setFormErrors({ name: false, reply_to: false, message: false });\n              if (contactFailed) {\n                document.location.href = `mailto:hakon@ryfylke.dev?body=${formState.message}`;\n                return;\n              }\n              let newFormErrors: {\n                [key: string]: boolean;\n              } = { reply_to: false, message: false };\n              if (!formState.reply_to) {\n                newFormErrors.reply_to = true;\n              }\n              if (!formState.message) {\n                newFormErrors.message = true;\n              }\n              if (\n                Object.keys(newFormErrors).every(\n                  (key) => (newFormErrors[key] as boolean) === false\n                )\n              ) {\n                setFormLoading(true);\n                axios\n                  .post(\n                    \"https://ewxpkphj05.execute-api.us-east-1.amazonaws.com/dev/static-site-mailer\",\n                    formState\n                  )\n                  .then(() => {\n                    setModalOpen(false);\n                    toast(\"Meldingen ble levert!\", { type: \"success\" });\n                  })\n                  .catch((err) => {\n                    toast(\"Klarte ikke å sende melding...\", {\n                      type: \"error\",\n                      autoClose: 2000,\n                    });\n                    toast(\n                      \"Trykk igjen for å sende mail fra din e-post klient\",\n                      {\n                        type: \"info\",\n                        autoClose: 7000,\n                      }\n                    );\n                    setContactFailed(true);\n                    const submitButton: HTMLButtonElement | null =\n                      document.querySelector(\n                        \".bx--modal-footer button.bx--btn--primary\"\n                      );\n                    if (submitButton) {\n                      submitButton.focus();\n                    }\n                    console.error(err);\n                  })\n                  .finally(() => {\n                    setFormLoading(false);\n                  });\n              } else {\n                setFormErrors(newFormErrors as typeof formErrors);\n              }\n            }}\n            modalHeading=\"Kontakt oss\"\n            primaryButtonText={contactFailed ? \"Send e-post\" : \"Send melding\"}\n            secondaryButtonText=\"Avbryt\"\n            hasForm\n          >\n            <Form>\n              <TextInput {...createFormProps(\"name\")} labelText=\"Ditt navn\" />\n              <TextInput\n                {...createFormProps(\"reply_to\")}\n                type=\"email\"\n                labelText=\"E-post addresse\"\n                invalidText=\"Obligatorisk felt\"\n              />\n              <TextArea\n                {...createFormProps(\"message\")}\n                labelText=\"Melding\"\n                invalidText=\"Obligatorisk felt\"\n              />\n              {formLoading && <Loading active />}\n            </Form>\n          </Modal>\n        </nav>\n      </header>\n      <main>\n        <SubHeader />\n        <Expertice />\n      </main>\n      <footer></footer>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/SubHeader/SubHeader.tsx",["29"],"import { ArrowRight32 } from \"@carbon/icons-react\";\nimport { Construct } from \"@carbon/pictograms-react\";\nimport React, {\n  CSSProperties,\n  useEffect,\n  useLayoutEffect,\n  useState,\n} from \"react\";\nimport \"./SubHeader.scss\";\n\nexport const SubHeader = () => {\n  const [scrollTop, setScrollTop] = useState(0);\n\n  useLayoutEffect(() => {\n    const onScroll = () => {\n      const nst = document.documentElement.scrollTop;\n      if (nst > 0 && nst < 250) {\n        setScrollTop(nst);\n      }\n    };\n    document.addEventListener(\"scroll\", onScroll, true);\n    console.log(\"listner added\");\n    return () => {\n      console.log(\"listner removed\");\n      document.removeEventListener(\"scroll\", onScroll, true);\n    };\n  }, []);\n  return (\n    <div className=\"SubHeader\">\n      <Construct\n        className=\"picto\"\n        style={{ \"--scrollTop\": scrollTop } as CSSProperties}\n      />\n      <h2>\n        Ditt produkt <ArrowRight32 /> <strong>neste nivå.</strong>\n      </h2>\n    </div>\n  );\n};\n\nexport default SubHeader;\n","/Users/hakonunderbakke/Documents/Projects/ryfylke-react-as.github.io/src/Components/Expertice/Expertice.tsx",["30"],"import {\n  Build,\n  Idea,\n  UserExperienceDesign,\n  WebDeveloper,\n} from \"@carbon/pictograms-react\";\nimport { Button, Tile } from \"carbon-components-react\";\nimport \"./Expertice.scss\";\n\ntype Props = {};\n\nexport const Expertice = ({}: Props) => {\n  return (\n    <div className=\"Expertice\">\n      <p>\n        Ved bruk av moderne nett-teknologi, kan vi hjelpe til med å løfte ditt\n        produkt opp til neste nivå.\n      </p>\n      <div className=\"tileGroup\">\n        <Tile light>\n          <UserExperienceDesign />\n          <div>\n            <h3>Tilgjengelighet</h3>\n            <p>\n              Hos Ryfylke React er vi veldig opptatt av at nettsted ikke bare\n              skal se og føles bra ut, men også være tilgjengelige for hvem som\n              helst, hvor som helst. Vi holder oss derfor kurset og oppdatert på\n              nyheter og best-practises rundt accessibility og responsivt\n              design.\n            </p>\n          </div>\n        </Tile>\n        <Tile light>\n          <Build />\n          <div>\n            <h3>Design</h3>\n            <p>\n              Vi er design-orienterte, og jobber helst innen et rammeverk.\n              Nettsted skal både se bra ut, og føles bra å bruke. Vi har god\n              kompetanse innen nett-animering, og avansert CSS.\n            </p>\n          </div>\n        </Tile>\n        <Tile light>\n          <Idea />\n          <div>\n            <h3>Kompetanse</h3>\n            <p>\n              Vi har utviklere som har jobbet på prosjekt hos små og store\n              firma. Solo-utvikling og design av prosjekt, eller på team av\n              internasjonale utviklere med SCRUM metodikk - vi trives på begge\n              fronter.\n            </p>\n          </div>\n        </Tile>\n        <Tile light>\n          <WebDeveloper />\n          <div>\n            <h3>Erfaring</h3>\n            <p>\n              Selv om vi er nye på markede, så har vi utvikler med mange år\n              erfaring med profesjonelt arbeid og tidligere kunder som Equinor,\n              Telenor og LIGL AS.\n            </p>\n            <Button kind=\"ghost\" href=\"https://haakon.dev\" target=\"_blank\">\n              Portfolio\n            </Button>\n          </div>\n        </Tile>\n      </div>\n    </div>\n  );\n};\n\nexport default Expertice;\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":5,"column":3,"nodeType":"37","messageId":"38","endLine":5,"endColumn":16},{"ruleId":"35","severity":1,"message":"39","line":5,"column":3,"nodeType":"37","messageId":"38","endLine":5,"endColumn":12},{"ruleId":"40","severity":1,"message":"41","line":12,"column":27,"nodeType":"42","messageId":"43","endLine":12,"endColumn":36},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"@typescript-eslint/no-unused-vars","'InlineLoading' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-global-assign","no-unsafe-negation"]