{"version":3,"sources":["Components/SubHeader/SubHeader.tsx","Components/Expertice/Expertice.tsx","Components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["SubHeader","useState","scrollTop","setScrollTop","useLayoutEffect","onScroll","nst","document","documentElement","addEventListener","console","log","removeEventListener","className","style","Expertice","Tile","light","Button","kind","href","target","App","modalOpen","setModalOpen","reply_to","message","setFormErrors","name","formState","setFormState","createFormProps","key","value","onChange","e","id","position","Tooltip","showIcon","align","triggerText","renderIcon","UserRole32","size","Email32","onClick","Modal","open","onRequestClose","onRequestSubmit","newFormErrors","Object","keys","every","axios","post","then","toast","type","catch","err","autoClose","error","modalHeading","primaryButtonText","secondaryButtonText","hasForm","Form","TextInput","labelText","TextArea","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a6f74875.chunk.js","sourcesContent":["import { ArrowRight32 } from \"@carbon/icons-react\";\nimport { Construct } from \"@carbon/pictograms-react\";\nimport React, {\n  CSSProperties,\n  useEffect,\n  useLayoutEffect,\n  useState,\n} from \"react\";\nimport \"./SubHeader.scss\";\n\nexport const SubHeader = () => {\n  const [scrollTop, setScrollTop] = useState(0);\n\n  useLayoutEffect(() => {\n    const onScroll = () => {\n      const nst = document.documentElement.scrollTop;\n      if (nst > 0 && nst < 250) {\n        setScrollTop(nst);\n      }\n    };\n    document.addEventListener(\"scroll\", onScroll, true);\n    console.log(\"listner added\");\n    return () => {\n      console.log(\"listner removed\");\n      document.removeEventListener(\"scroll\", onScroll, true);\n    };\n  }, []);\n  return (\n    <div className=\"SubHeader\">\n      <Construct\n        className=\"picto\"\n        style={{ \"--scrollTop\": scrollTop } as CSSProperties}\n      />\n      <h2>\n        Ditt produkt <ArrowRight32 /> <strong>neste nivå</strong>.\n      </h2>\n    </div>\n  );\n};\n\nexport default SubHeader;\n","import { Email32 } from \"@carbon/icons-react\";\nimport {\n  ArtTools_01,\n  Build,\n  Idea,\n  QuestionAndAnswer,\n  UserExperienceDesign,\n  WebDeveloper,\n} from \"@carbon/pictograms-react\";\nimport { Button, Tab, Tabs, Tile } from \"carbon-components-react\";\nimport React from \"react\";\nimport \"./Expertice.scss\";\n\ntype Props = {};\n\nexport const Expertice = ({}: Props) => {\n  return (\n    <div className=\"Expertice\">\n      <p>\n        Ved bruk av moderne nett-teknologi, kan vi hjelpe til med å løfte ditt\n        produkt opp til neste nivå.\n      </p>\n      <div className=\"tileGroup\">\n        <Tile light>\n          <UserExperienceDesign />\n          <div>\n            <h3>Tilgjengelighet</h3>\n            <p>\n              Hos Ryfylke React er vi veldig opptatt av at nettsted ikke bare\n              skal se og føles bra ut, men også være tilgjengelige for hvem som\n              helst, hvor som helst. Vi holder oss derfor kurset og oppdatert på\n              nyheter og best-practises rundt accessibility og responsivt\n              design.\n            </p>\n          </div>\n        </Tile>\n        <Tile light>\n          <Build />\n          <div>\n            <h3>Design</h3>\n            <p>\n              Vi er design-orienterte, og jobber helst innen et rammeverk.\n              Nettsted skal både se bra ut, og føles bra å bruke. Vi har god\n              kompetanse innen nett-animering, og avansert CSS.\n            </p>\n          </div>\n        </Tile>\n        <Tile light>\n          <Idea />\n          <div>\n            <h3>Kompetanse</h3>\n            <p>\n              Vi har utviklere som har jobbet på prosjekt hos små og store\n              firma. Solo-utvikling og design av prosjekt, eller på team av\n              internasjonale utviklere med SCRUM metodikk - vi trives på begge\n              fronter.\n            </p>\n          </div>\n        </Tile>\n        <Tile light>\n          <WebDeveloper />\n          <div>\n            <h3>Erfaring</h3>\n            <p>\n              Selv om vi er nye på markede, så har vi utvikler med mange år\n              erfaring med profesjonelt arbeid og tidligere kunder som Equinor,\n              Telenor og LIGL AS.\n            </p>\n            <Button kind=\"ghost\" href=\"https://haakon.dev\" target=\"_blank\">\n              Portfolio\n            </Button>\n          </div>\n        </Tile>\n      </div>\n    </div>\n  );\n};\n\nexport default Expertice;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Form,\n  Modal,\n  TextArea,\n  TextInput,\n} from \"carbon-components-react\";\nimport { Email32, UserRole32 } from \"@carbon/icons-react\";\nimport { SubHeader } from \"../SubHeader/SubHeader\";\nimport { Expertice } from \"../Expertice/Expertice\";\nimport \"./App.scss\";\nimport { Tooltip } from \"carbon-components-react/lib/components/Tooltip/Tooltip\";\nimport axios from \"axios\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [formErrors, setFormErrors] = useState({\n    reply_to: false,\n    message: false,\n  });\n  const [formState, setFormState] = useState({\n    name: \"\",\n    reply_to: \"\",\n    message: \"\",\n  });\n  const createFormProps = (key: keyof typeof formState) => ({\n    value: formState[key],\n    onChange: (e: any) =>\n      setFormState({ ...formState, [key]: e?.target?.value }),\n    id: key,\n  });\n\n  return (\n    <div className=\"App\">\n      <ToastContainer position=\"top-center\" />\n      <header>\n        <h1>\n          Ryfylke React AS <p>Frontend konsulent-firma</p>\n        </h1>\n        <nav>\n          <Tooltip\n            showIcon={false}\n            align=\"end\"\n            triggerText={\n              <Button id=\"konsulenter\" kind=\"secondary\" renderIcon={UserRole32}>\n                Konsulenter\n              </Button>\n            }\n          >\n            <ul>\n              <li>\n                <Button\n                  size=\"field\"\n                  kind=\"secondary\"\n                  href=\"https://haakon.dev\"\n                  target=\"_blank\"\n                >\n                  Håkon S. Underbakke\n                </Button>\n              </li>\n            </ul>\n          </Tooltip>\n\n          <Button renderIcon={Email32} onClick={() => setModalOpen(true)}>\n            Kontakt oss\n          </Button>\n          <Modal\n            open={modalOpen}\n            onRequestClose={() => setModalOpen(false)}\n            onRequestSubmit={() => {\n              let newFormErrors: {\n                [key: string]: boolean;\n              } = { reply_to: false, message: false };\n              if (!formState.reply_to) {\n                newFormErrors.reply_to = true;\n              }\n              if (!formState.message) {\n                newFormErrors.message = true;\n              }\n              console.log(newFormErrors);\n              if (\n                Object.keys(newFormErrors).every(\n                  (key) => (newFormErrors[key] as boolean) === false\n                )\n              ) {\n                axios\n                  .post(\n                    \"https://ewxpkphj05.execute-api.us-east-1.amazonaws.com/dev/static-site-mailer\",\n                    formState\n                  )\n                  .then(() => {\n                    setModalOpen(false);\n                    toast(\"Meldingen ble levert!\", { type: \"success\" });\n                  })\n                  .catch((err) => {\n                    toast(\"Klarte ikke å sende melding...\", {\n                      type: \"error\",\n                      autoClose: 2000,\n                    });\n                    toast(\n                      \"Send gjerne en e-post direkte til hakon@ryfylke.dev\",\n                      {\n                        type: \"info\",\n                        autoClose: 7000,\n                      }\n                    );\n                    console.error(err);\n                    setModalOpen(false);\n                  });\n              } else {\n                setFormErrors(newFormErrors as typeof formErrors);\n              }\n            }}\n            modalHeading=\"Kontakt oss\"\n            primaryButtonText=\"Send melding\"\n            secondaryButtonText=\"Avbryt\"\n            hasForm\n          >\n            <Form>\n              <TextInput {...createFormProps(\"name\")} labelText=\"Ditt navn\" />\n              <TextInput\n                {...createFormProps(\"reply_to\")}\n                type=\"email\"\n                labelText=\"E-post addresse\"\n              />\n              <TextArea {...createFormProps(\"message\")} labelText=\"Melding\" />\n            </Form>\n          </Modal>\n        </nav>\n      </header>\n      <main>\n        <SubHeader />\n        <Expertice />\n      </main>\n      <footer></footer>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./Components/App/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}